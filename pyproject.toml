
[project]
name = "deriva-model-template"  # Change this to be the name of the current project.
dynamic = ["version"]
authors = [
    {name = "ISRD", email = "isrd-dev@isi.edu"},
]
description = "A test template for using DerivaML"
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    # Change this to be the module with the domain specific class derived from deriva-ml.
     "deriva-ml",
]

[dependency-groups]
dev = [
    "pytest",
    "pytest-coverage",
    "ruff",
    "ipython"
]

jupyter = ["ipykernel", "jupyter"]  # optional extras for local dev
torch = ["pytorch"]
tensorflow = [
    # On macOS + ARM64 → TensorFlow-Metal support
    "tensorflow-macos; platform_system == 'Darwin' and platform_machine == 'arm64'",
    "tensorflow-metal; platform_system == 'Darwin' and platform_machine == 'arm64'",

    # On all other platforms → regular TensorFlow
    "tensorflow; platform_system != 'Darwin' or platform_machine != 'arm64'",
]



[tool.uv]
package = true
python-preference = "managed"

# You may add additional dependency-groups to this list, for example, default-groups = ["dev", "jupiter", "torch"]
default-groups = ["dev"]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
# Update this for whatever version of CUDA you are using.
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[tool.uv.sources]
    torch = [
        { index = "pytorch-cpu", marker = "(sys_platform == 'darwin' and platform_machine == 'arm64') or (platform_machine != 'x86_64' and sys_platform == 'Linux')"},
        { index = "pytorch-cuda", marker = "sys_platform == 'Linux' and platform_machine == 'x86_64'"}
    ]

[tool.setuptools_scm]
version_scheme = "post-release"

[tool.bumpversion]
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
tag = true
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
message = "Bump version: {current_version} → {new_version}"

[metadata]
license = "Apache 2.0"
keywords = ["deriva-ml"]